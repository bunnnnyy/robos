{"version":3,"sources":["Card.js","Cardlist.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","Cardlist","robots","Cardcomponent","map","user","i","Search","Searched","type","placeholder","onChange","App","SearchFilter","event","setState","Searchdata","target","value","state","fetch","then","response","json","users","Filtered","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAKC,EAAgB,EAAhBA,KAAOC,EAAS,EAATA,MACvB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,cAAcC,IAAG,+BAA0BL,EAA1B,cAC1B,gCACI,6BAAKC,IACL,6BAAKC,WCWNI,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAiBD,EAAOE,KAAI,SAACC,EAAMC,GACrC,OAEI,cAAC,EAAD,CAAcX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAOC,MAAOK,EAAOI,GAAGT,OAA7DS,MAGnB,OAEI,gCACMH,EADN,QCCOI,EARA,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAChB,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,gCAAgCW,KAAK,SAASC,YAAY,cAAcC,SAAUH,OCiCvFI,E,kDAnCd,aAAc,IAAD,8BACZ,gBAcDC,aAAa,SAACC,GACb,EAAKC,SAAS,CAACC,WAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACZjB,OAAQ,GACRc,WAAa,IAJF,E,gEAQO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,OAAO,EAAKT,SAAS,CAACb,OAASsB,S,+BAQxB,IAAD,OACDC,EAAWC,KAAKP,MAAMjB,OAAOyB,QAAO,SAAAC,GACtC,OAAOA,EAAMhC,KAAKiC,cAAcC,SAAS,EAAKX,MAAMH,WAAWa,kBAEnE,OAEC,sBAAK/B,UAAU,KAAf,UACA,8CACA,cAAC,EAAD,CAAQU,SAAUkB,KAAKb,eACvB,cAAC,EAAD,CAAUX,OAAQuB,W,GA9BHM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACM,cAAC,EAAD,MAENC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.adf03b46.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id , name , email})=>{\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt=\"profile pic\" src={`https://robohash.org/${id}?200*200`} />\n            <div>\n                <h2>{name}</h2>\n                <h5>{email}</h5>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n    const Cardcomponent =  robots.map((user, i)=>{\n        return (\n            \n            <Card key={i} id={robots[i].id} name={robots[i].name}  email={robots[i].email}  />\n               )\n    });\n    return (\n        \n        <div>    \n            { Cardcomponent };\n        </div>\n        \n    );\n}\n\nexport default Cardlist;","import React from 'react';\n\n\n\n\nconst Search = ({Searched})=>{\n\treturn(\n\t\t<div className=\"pa2\">\n\t\t\t<input className=\"pa3 ba b--green bg-light-blue\" type=\"search\" placeholder=\"Search here\" onChange={Searched} />\n\t\t</div>\n\t\t)\n}\n\nexport default Search;","import React, { Component} from 'react';\nimport Cardlist from './Cardlist';\nimport Search from './Search';\n\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots :[] ,\n\t\t\tSearchdata : ''\n\t\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => {\n\t\t\treturn this.setState({robots : users})\n\t\t})\n\t}\n\tSearchFilter=(event)=>{\n\t\tthis.setState({Searchdata : event.target.value});\t\n\t\t// console.log(Filtered);\n\t}\n\t\t\n\trender(){\n\t\tconst Filtered = this.state.robots.filter(robot =>{\n\t\t\t \t\treturn robot.name.toLowerCase().includes(this.state.Searchdata.toLowerCase());\n\t\t\t\t})\n\t\treturn(\n\t\t\t\t\n\t\t\t<div className=\"tc\">\n\t\t\t<h1>Robo Friends</h1>\n\t\t\t<Search Searched={this.SearchFilter}/>\n\t\t\t<Cardlist robots={Filtered}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\t\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n"],"sourceRoot":""}